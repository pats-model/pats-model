var searchIndex = JSON.parse('{\
"pats":{"doc":"Parcel Ascent Tracing System (PATS) is the numerical â€¦","tn":["ALLOCATOR","Float","constants","errors","main","model","NS_C_EARTH","WE_C_EARTH","WGS84_A","WGS84_B","WGS84_E","WGS84_H","CannotParseDatetime","CannotReadGrib","CannotReadInput","CantDeserialize","CantOpenFile","Config","ConfigError","DataNotSufficient","EmptyArray","Environment","EnvironmentError","GRIBInput","IncorrectKeyType","IncorrectParams","IncorrectShape","InputError","ModelError","OutOfBounds","OutOfBounds","ParcelError","ProjectionError","ProjectionError","SearchError","SearchUnable","ThreadPool","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","into","into","into","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","source","source","source","source","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Core","borrow","borrow_mut","config","configuration","deref","deref_mut","drop","environ","environment","fmt","from","from_subset","init","into","is_in_subset","main","new","parcel","prepare_parcels_list","threadpool","to_subset","to_subset_unchecked","try_from","try_into","type_id","Config","DateTime","Domain","Input","Resources","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_bounds","check_bounds","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","data_files","datetime","default","default_margins","default_memory","default_threads","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","domain","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","input","into","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","level_type","margins","memory","ne","ne","ne","ne","ne","new_from_file","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","ref_lat","ref_lon","resources","shape","spacing","start","threads","timestep","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Environment","Fields","LonLat","Surface","accesser","approx_central_lon","assign_raw_fields","assign_raw_surfaces","bisection","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffer","buffer_fields","buffer_surface","cast_lonlat_fields_coords","cast_lonlat_surface_coords","compute_domain_extent","compute_intermediate_fields","compute_intermediate_surfaces","compute_top_lat","deref","deref","deref","deref_mut","deref_mut","deref_mut","dewpoint","drop","drop","drop","fields","fmt","fmt","fmt","from","from","from","from_subset","from_subset","from_subset","generate_domain_projection","get_field_value","get_surface_value","height","height","init","init","init","input","interpolation","into","into","into","is_in_subset","is_in_subset","is_in_subset","lats","lats","levels","list_levels","lons","lons","measure_domain_sides","mixing_ratio","new","new_empty","new_empty","pressure","pressure","projection","projection","read_distinct_latlons","read_input_shape","read_raw_field","read_raw_messages","read_raw_surface","read_truncated_pressure","sat_mixing_ratio","spec_humidity","surface","temperature","temperature","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","u_wind","u_wind","v_wind","v_wind","virtual_temp","virtual_temp","Dewpoint","EnvFields","Height","MixingRatio","Pressure","Pressure","SaturationMixingRatio","SpecificHumidity","SurfaceFields","Temperature","Temperature","UWind","UWind","VWind","VWind","VirtualTemperature","VirtualTemperature","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from_subset","from_subset","hash","hash","init","init","into","into","is_in_subset","is_in_subset","partial_cmp","partial_cmp","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","binary_search","find_left_closest","find_right_closest","convert_to_grib_longitudes","fields","find_extent_edge_indices","surface","messages_to_array","truncate_field_to_extent","truncate_surface_to_extent","Matrix8","Point2D","Point3D","Vector8","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fmt","fmt","from","from","from_subset","from_subset","init","init","interpolate_bilinear","interpolate_tilinear","into","into","is_in_subset","is_in_subset","ne","ne","partial_cmp","partial_cmp","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","value","value","x","x","y","y","z","LambertConicConformal","big_f","big_f","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","fmt","from","from_subset","init","into","inverse_project","is_in_subset","lambda_0","m","n","n","ne","new","partial_cmp","phi_for_inverse","project","rho","rho_0","t","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","deploy"],"q":["pats","","","","","","pats::constants","","","","","","pats::errorspats::model","","","","","","","","","","","","","","","","","","","","","","","","","","pats::model::configuration","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pats::model::environment","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pats::model::environment::accesser","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pats::model::environment::bisection","","","pats::model::environment::buffer","","","","pats::model::environment::buffer::fields","","pats::model::environment::buffer::surface","pats::model::environment::interpolation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pats::model::environment::projection","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pats::model::parcel"],"d":["Global allocator used by the model.","Type used by the model floating point variables.","Module containing constants used by the model.","Module with error definitions for all struct and function â€¦","The main program function. Prepares the runtime â€¦","Module containing the actual model code. Whole â€¦","WGS84 ellipsoid circumference along meridian","WGS84 ellipsoid circumference along equator","WGS84 ellipsoid semi-major axis","WGS84 ellipsoid semi-minor axis","WGS84 ellipsoid eccentricity","WGS84 ellipsoid Ramanujanâ€™s $h$ parameter","","","","","","","Errors related to reading and handling the model â€¦","","","","Errors related to reading and handling boundary â€¦","","","","","Errors related to reading input GRIB files.","General errors gathering all errors that can be returned â€¦","","","Errors related to parcel simulation.","Errors realted to geographic projection.","","Errors related to searching datasets with bisection.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Structure containing model parameters.","","","","Module responsible for parsing and checking the â€¦","","","","","Module responsible for reading and storing boundary â€¦","","","","","","","Main model function, responsible for all simulation steps.","Model <code>Core</code> constructor.","(TODO: What it is)","Function calculating initial parcels positions from â€¦","","","","","","","Main config structure representing the fields in â€¦","Fields with information about time used by model.","Fields with model domain information.","Fields with information about model input data for â€¦","<em>(Optional)</em> Fields with information about resources â€¦","","","","","","","","","","","Checks if domain specification follows conventions and â€¦","Checks if thread count and memory limit are above limits.","","","","","","","","","","","List of input GRIB files to read boundary coonditions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Level type of GRIB messages in input files from which 3D â€¦","<em>(Optional)</em> Domain margins (in degrees) for lon and lat â€¦","<em>(Optional)</em> Heap memory limit for the model in MB. Useful â€¦","","","","","","Config structure constructor, responsible for â€¦","","","","","","Latitude (in degrees) of south-west domain corner.","Longitude (in degrees) of south-west domain corner.","","Domain shape (in model gridpoints/parcels). Represents â€¦","Domain spacing in meters. Represents the distance between â€¦","Start datetime for the model. Currently, it is used only â€¦","<em>(Optional)</em> Thread count used by the model. The thread â€¦","Timestep (in seconds) used by the model.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Environment main struct storing and providing boundary â€¦","Struct for storing environmental variables from levels â€¦","Convenience type to store lat-lon coordinates.","Struct for storing environmental variables at/near â€¦","Module with methods for accessing the  environment and â€¦","Function to approximate the longitude of domain centre on â€¦","Reads variables on pressure levels from GRIB file and â€¦","Reads variables on surface level from GRIB file and â€¦","Module containg methods for conducting binary search â€¦","","","","","","","Module containing methods responsible for buffering data â€¦","Function to read pressure level data from GRIB input in â€¦","Function to read surface data from GRIB input in extent â€¦","Buffers longitudes and latitudes of pressure level data â€¦","Buffers longitudes and latitudes of surface data â€¦","Function to get a lat-lon extent of domain with margins.","Computes and buffers additional pressure level data from â€¦","Computes and buffers additional surface data from values â€¦","Function to compute the latitude of domain top on the â€¦","","","","","","","","","","","","","","","","","","","","","Function to create a geographic projection struct with â€¦","Function to get interpolated value of given environment â€¦","Function to get interpolated value of given surface field â€¦","","","","","","","Module containing interpolation methods.","","","","","","","","","","Function to get the list of unique levels of specified â€¦","","","Function to get domain sides length in meters.","","Environment struct constructor responsible for reading â€¦","","","","","Module with methods to do computations of geographical â€¦","","Function to read distinct longitudes and latitudes in â€¦","Function to read a grid shape of input GRIB files.","Reads all values in GRIB file at specified level type of â€¦","Filters and read allÂ GRIB messages that contain variable â€¦","Reads all values in GRIB file at surface level of â€¦","Creates a 3d array of pressure data of shape identical to â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enum containing fields on pressure levels that can be â€¦","","","","","","","Enum containing surface fields that can be requested.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Core bisection function, simply an implementation of â€¦","Convienience public method to find a closest value to â€¦","Convienience public method to find a closest value to â€¦","Converts the longitude in convention used by model â€¦","Sub-module responsible for handling pressure level data â€¦","Finds closests indices in the GRIB input files grid that â€¦","Sub-module responsible for handling surface data â€¦","Collects data from GRIB messages on specified level type â€¦","Truncates data on specified level type from GRIB file to â€¦","Truncates surface data array from GRIB file to cover only â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Function computing bilinear interpolation on 2D surface â€¦","Function computing bilinear interpolation in 3D field â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","Front-facing struct of Lambert Conformal Conic projection.","","","","","","","","","","","","","","","","","Function to inversly project cartographic coordinates on â€¦","","","","","","","LCC projection constructor from reference longitude and â€¦","","To compute the phi for inverse projection truncated â€¦","Function to project geographic coordinates on WGS84 â€¦","","","","","","","","","","(TODO: What it is)"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,2,3,0,1,4,3,0,5,1,6,1,0,0,2,4,0,0,5,0,5,3,3,2,5,1,4,7,6,3,2,5,1,4,7,6,3,2,5,1,4,7,6,3,2,5,1,4,7,6,3,2,5,1,4,7,6,3,3,2,2,5,5,1,1,4,4,7,7,6,6,3,3,3,3,2,2,2,2,5,5,5,5,1,1,1,1,4,7,6,3,2,5,1,4,7,6,3,2,5,1,4,7,6,3,2,5,1,4,7,6,3,2,5,1,4,7,6,3,2,5,1,3,2,5,1,4,7,6,3,2,5,1,4,7,6,3,2,5,1,4,7,6,3,2,5,1,4,7,6,3,2,5,1,4,7,6,3,2,5,1,4,7,6,0,8,8,8,0,8,8,8,8,0,8,8,8,8,8,8,0,8,0,0,8,8,8,8,8,8,0,0,0,0,0,9,10,11,12,13,9,10,11,12,13,9,12,9,10,11,12,13,9,10,11,12,13,11,13,12,9,12,12,9,10,11,12,13,9,10,11,12,13,9,10,11,12,13,13,9,10,11,12,13,9,10,11,12,13,9,10,11,12,13,9,10,11,12,13,9,10,11,12,13,9,10,11,12,13,13,9,10,11,12,13,9,10,11,12,13,11,9,12,9,10,11,12,13,13,9,10,11,12,13,9,9,13,9,9,10,12,10,9,10,11,12,13,9,10,11,12,13,9,10,11,12,13,9,10,11,12,13,9,10,11,12,13,9,10,11,12,13,0,0,0,0,0,0,14,14,0,15,16,14,15,16,14,0,14,14,14,14,0,14,14,0,15,16,14,15,16,14,16,15,16,14,14,15,16,14,15,16,14,15,16,14,0,14,14,15,16,15,16,14,14,0,15,16,14,15,16,14,15,16,14,0,15,16,0,16,14,15,16,15,16,0,14,14,14,14,14,14,14,16,15,14,15,16,15,16,14,15,16,14,15,16,14,15,16,14,15,16,14,15,16,15,16,15,16,17,0,17,17,17,18,17,18,0,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,20,19,20,19,20,19,20,19,20,19,20,19,20,19,20,19,20,19,20,19,20,19,20,19,20,0,0,19,20,19,20,19,20,19,20,19,20,19,20,19,20,19,20,19,20,19,20,19,20,19,20,19,20,20,0,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,21,21,21,21,0,21,0,21,0,21,21,21,21,21,21,0],"f":[null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["configerror",4]]],[[["threadpoolbuilderror",3]]],[[["environmenterror",4]]],[[]],[[]],[[["error",3]]],[[["error",3]]],[[["inputerror",4]]],[[["projectionerror",4]]],[[["searcherror",4]]],[[["inputerror",4]]],[[]],[[]],[[["codeserror",4]]],[[["shapeerror",3]]],[[["parseerror",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["option",4,["error"]],["error",8]]],[[],[["option",4,["error"]],["error",8]]],[[],[["option",4,["error"]],["error",8]]],[[],[["option",4,["error"]],["error",8]]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,null,[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[]],[[],["bool",15]],[[],[["modelerror",4],["result",4,["string","modelerror"]],["string",3]]],[[],[["modelerror",4],["result",4,["modelerror"]]]],null,[[["core",3]],["vec",3]],null,[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4,["configerror"]],["configerror",4]]],[[],[["result",4,["configerror"]],["configerror",4]]],[[],["domain",3]],[[],["datetime",3]],[[],["input",3]],[[],["resources",3]],[[],["config",3]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[],["usize",15]],[[],["u16",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["domain",3]],["bool",15]],[[["datetime",3]],["bool",15]],[[["input",3]],["bool",15]],[[["resources",3]],["bool",15]],[[["config",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],null,[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,[[["domain",3]],["bool",15]],[[["datetime",3]],["bool",15]],[[["input",3]],["bool",15]],[[["resources",3]],["bool",15]],[[["config",3]],["bool",15]],[[["path",3]],[["result",4,["config","configerror"]],["config",3],["configerror",4]]],[[["domain",3]],[["option",4,["ordering"]],["ordering",4]]],[[["datetime",3]],[["option",4,["ordering"]],["ordering",4]]],[[["input",3]],[["option",4,["ordering"]],["ordering",4]]],[[["resources",3]],[["option",4,["ordering"]],["ordering",4]]],[[["config",3]],[["option",4,["ordering"]],["ordering",4]]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,[[["f32",15]],["f32",15]],[[],[["result",4,["inputerror"]],["inputerror",4]]],[[],[["result",4,["inputerror"]],["inputerror",4]]],null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],[["result",4,["environmenterror"]],["environmenterror",4]]],[[],[["result",4,["environmenterror"]],["environmenterror",4]]],[[]],[[]],[[["lambertconicconformal",3],["domain",3]]],[[]],[[]],[[["f32",15]],["f32",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["domain",3]],[["environmenterror",4],["lambertconicconformal",3],["result",4,["lambertconicconformal","environmenterror"]]]],[[["f32",15],["envfields",4]],[["result",4,["f32","environmenterror"]],["f32",15],["environmenterror",4]]],[[["f32",15],["surfacefields",4]],[["result",4,["f32","environmenterror"]],["f32",15],["environmenterror",4]]],null,null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],null,null,[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,[[["input",3]],[["vec",3,["i64"]],["inputerror",4],["result",4,["vec","inputerror"]]]],null,null,[[["domain",3]]],null,[[["config",3]],[["result",4,["environmenterror"]],["environmenterror",4]]],[[]],[[]],null,null,null,null,[[],[["inputerror",4],["result",4,["inputerror"]]]],[[],[["result",4,["inputerror"]],["inputerror",4]]],[[["str",15]],[["array3",6,["f32"]],["result",4,["array3","inputerror"]],["inputerror",4]]],[[["str",15]],[["vec",3,["keyedmessage"]],["inputerror",4],["result",4,["vec","inputerror"]]]],[[["str",15]],[["array2",6,["f32"]],["inputerror",4],["result",4,["array2","inputerror"]]]],[[],[["array3",6,["f32"]],["f32",15]]],null,null,null,null,null,[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["surfacefields",4]],[[],["envfields",4]],[[]],[[]],[[["surfacefields",4]],["ordering",4]],[[["envfields",4]],["ordering",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["surfacefields",4]],["bool",15]],[[["envfields",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["surfacefields",4]],[["option",4,["ordering"]],["ordering",4]]],[[["envfields",4]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],[["usize",15],["searcherror",4],["result",4,["usize","searcherror"]]]],[[],[["usize",15],["searcherror",4],["result",4,["usize","searcherror"]]]],[[],[["usize",15],["searcherror",4],["result",4,["usize","searcherror"]]]],[[["f32",15]],["f32",15]],null,[[]],null,[[["vec",3,["keyedmessage"]],["keyedmessage",3]],[["array3",6,["f32"]],["result",4,["array3","inputerror"]],["inputerror",4]]],[[["array3",6]],[["array3",6,["f32"]],["f32",15]]],[[["array2",6]],[["array2",6,["f32"]],["f32",15]]],null,null,null,null,[[]],[[]],[[]],[[]],[[],["point2d",3]],[[],["point3d",3]],[[]],[[]],[[],["point2d",3]],[[],["point3d",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["point2d",3]],["bool",15]],[[["point3d",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["f32",15]],["f32",15]],[[["f32",15]],["f32",15]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["point2d",3]],["bool",15]],[[["point3d",3]],["bool",15]],[[["point2d",3]],[["option",4,["ordering"]],["ordering",4]]],[[["point3d",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[["f32",15]],["f32",15]],null,[[]],[[]],[[],["lambertconicconformal",3]],[[]],[[],["lambertconicconformal",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["lambertconicconformal",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[]],[[["f32",15]]],[[],["bool",15]],null,[[["f32",15]],["f32",15]],[[["f32",15]],["f32",15]],null,[[["lambertconicconformal",3]],["bool",15]],[[["f32",15]],[["result",4,["projectionerror"]],["projectionerror",4]]],[[["lambertconicconformal",3]],[["option",4,["ordering"]],["ordering",4]]],[[["f32",15]],["f32",15]],[[["f32",15]]],[[["f32",15]],["f32",15]],null,[[["f32",15]],["f32",15]],[[]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["arc",3,["environment"]],["config",3],["arc",3,["config"]],["environment",3]],[["parcelerror",4],["result",4,["parcelerror"]]]]],"p":[[4,"InputError"],[4,"ConfigError"],[4,"ModelError"],[4,"SearchError"],[4,"EnvironmentError"],[4,"ProjectionError"],[4,"ParcelError"],[3,"Core"],[3,"Domain"],[3,"DateTime"],[3,"Input"],[3,"Resources"],[3,"Config"],[3,"Environment"],[3,"Fields"],[3,"Surface"],[4,"SurfaceFields"],[4,"EnvFields"],[3,"Point2D"],[3,"Point3D"],[3,"LambertConicConformal"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};